#!/usr/bin/python3
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

import argparse
from lib.utils.git import *
from lib.pipeline import *

def parse_args():
    """
    Parse the CLI arguments.
    """

    parser = argparse.ArgumentParser()
    parser.add_argument("--repo-path", help="path to the repository to check",
                        required=True, type=str)
    parser.add_argument("--dry-run", help="DO NOT try to automatically fix found issues",
                        action=argparse.BooleanOptionalAction, type=bool, default=False)
    parser.add_argument("--verbose", help="print verbose output for each check",
                        action=argparse.BooleanOptionalAction, type=bool, default=False)
    args = parser.parse_args()

    # Get repository information
    repo_info = get_repo_info(args.repo_path)
    args.repo_info = repo_info

    return args


def main():
    """
    The beman-tidy main entry point.
    """
    args = parse_args()

    # No action can be performed without the Beman Standard downloaded.
    beman_standard = download_beman_standard()
    if not beman_standard or len(beman_standard) == 0:
        print("Failed to download the beman standard. STOP.")
        return

    # Actually run the checks.
    run_checks_pipeline(args, beman_standard)

    # Show coverage.
    print_coverage(args.repo_info, beman_standard)

if __name__ == "__main__":
    main()
